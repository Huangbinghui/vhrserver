<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper>
    <resultMap id="BaseResultMap" type="ltd.huangbinghui.vhr.model.Salary">
        <id column="id" property="id" jdbcType="INTEGER"></id>
        <result column="basicSalary" property="basicSalary" jdbcType="INTEGER"></result>
        <result column="bonus" property="bonus" jdbcType="INTEGER"></result>
        <result column="trafficSalary" property="trafficSalary" jdbcType="INTEGER"></result>
        <result column="allSalary" property="allSalary" jdbcType="INTEGER"></result>
        <result column="pensionBase" property="pensionBase" jdbcType="INTEGER"></result>
        <result column="pensionPer" property="pensionPer" jdbcType="REAL"></result>
        <result column="createDate" property="createDate" jdbcType="TIMESTAMP"></result>
        <result column="medicalBase" property="medicalBase" jdbcType="INTEGER"></result>
        <result column="medicalPer" property="medicalPer" jdbcType="REAL"></result>
        <result column="accumulationfundBase" property="accumulationfundBase" jdbcType="INTEGER"></result>
        <result column="accumulationfundPer" property="accumulationfundPer" jdbcType="REAL"></result>
        <result column="name" property="name" jdbcType="VARCHAR"></result>
    </resultMap>

    <sql id="BaseColumnList">
        id,basicSalary,bonus,lunchSalary,trafficSalary,allSalary,pensionBase,pensionPer,createDate,medicalBase,medicalPer,accumulationFundBase,accumulationFundPer,name
    </sql>
    
    <insert id="insert" parameterType="ltd.huangbinghui.vhr.model.Salary">
        insert into Salary
        (id,basicSalary,bonus,lunchSalary,trafficSalary,allSalary,pensionBase,pensionPer,createDate,medicalBase,medicalPer,accumulationFundBase,accumulationFundPer,name)
        values
        (#{id},#{basicSalary},#{bonus},#{lunchSalary},#{trafficSalary},#{allSalary},#{pensionBase},#{pensionPer},#{createDate},#{medicalBase},#{medicalPer},#{accumulationFundBase},#{accumulationFundPer},#{name})
    </insert>

    <insert id="insertSelective" parameterType="ltd.huangbinghui.vhr.model.Salary">
        insert into Salary
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="basicSalary != null">
                basicSalary,
            </if>
            <if test="bonus != null">
                bonus,
            </if>
            <if test="trafficSalary != null">
                trafficSalary,
            </if>
            <if test="allSalary != null">
                allSalary,
            </if>
            <if test="pensionBase != null">
                pensionBase,
            </if>
            <if test="pensionPer != null">
                pensionPer,
            </if>
            <if test="createDate != null">
                createDate,
            </if>
            <if test="medicalBase != null">
                medicalBase,
            </if>
            <if test="medicalPer != null">
                medicalPer,
            </if>
            <if test="accumulationfundBase != null">
                accumulationfundBase,
            </if>
            <if test="accumulationfundPer != null">
                accumulationfundPer,
            </if>
            <if test="name != null">
                name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="basicSalary != null">
                #{basicSalary},
            </if>
            <if test="bonus != null">
                #{bonus},
            </if>
            <if test="trafficSalary != null">
                #{trafficSalary},
            </if>
            <if test="allSalary != null">
                #{allSalary},
            </if>
            <if test="pensionBase != null">
                #{pensionBase},
            </if>
            <if test="pensionPer != null">
                #{pensionPer},
            </if>
            <if test="createDate != null">
                #{createDate},
            </if>
            <if test="medicalBase != null">
                #{medicalBase},
            </if>
            <if test="medicalPer != null">
                #{medicalPer},
            </if>
            <if test="accumulationfundBase != null">
                #{accumulationfundBase},
            </if>
            <if test="accumulationfundPer != null">
                #{accumulationfundPer},
            </if>
            <if test="name != null">
                #{name},
            </if>
        </trim>
    </insert>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from Salary where id = #{id}
    </delete>

    <update id="updateById" parameterType="ltd.huangbinghui.vhr.model.Salary">
        update Salary
        set basicSalary = #{basicSalary},
            bonus = #{bonus},
            lunchSalary = #{lunchSalary},
            trafficSalary = #{trafficSalary},
            allSalary = #{allSalary},
            pensionBase = #{pensionBase},
            pensionPer = #{pensionPer},
            createDate = #{createDate},
            medicalBase = #{medicalBase},
            medicalPer = #{medicalPer},
            accumulationFundBase = #{accumulationFundBase},
            accumulationFundPer = #{accumulationFundPer},
            name = #{name}
        where id = #{id}
    </update>

    <update id="updateByIdSelective" parameterType="ltd.huangbinghui.vhr.model.Salary">
        update Salary
        <set>
            <if test="basicSalary != null">
                basicSalary = #{basicSalary},
            </if>
            <if test="bonus != null">
                bonus = #{bonus},
            </if>
            <if test="lunchSalary != null">
                lunchSalary = #{lunchSalary},
            </if>
            <if test="trafficSalary != null">
                trafficSalary = #{trafficSalary},
            </if>
            <if test="trafficSalary != null">
                trafficSalary = #{trafficSalary},
            </if>
            <if test="allSalary != null">
                allSalary = #{allSalary},
            </if>
            <if test="pensionBase != null">
                pensionBase = #{pensionBase},
            </if>
            <if test="pensionPer != null">
                pensionPer = #{pensionPer},
            </if>
            <if test="createDate != null">
                createDate = #{createDate},
            </if>
            <if test="medicalBase != null">
                medicalBase = #{medicalBase},
            </if>
            <if test="medicalPer != null">
                medicalPer = #{medicalPer},
            </if>
            <if test="accumulationFundBase != null">
                accumulationFundBase = #{accumulationFundBase},
            </if>
            <if test="accumulationFundPer != null">
                accumulationFundPer = #{accumulationFundPer},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="BaseColumnList"></include>
        from salary
        where id = #{id}
    </select>

    <select id="getAllSalaries" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"></include>
        from salary
    </select>
</mapper>